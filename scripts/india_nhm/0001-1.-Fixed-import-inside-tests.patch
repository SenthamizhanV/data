From 08fcb62d36ee2d85da25a1bce3a0d5bc31910dd3 Mon Sep 17 00:00:00 2001
From: Thejesh GN <i@thejeshgn.com>
Date: Mon, 2 Aug 2021 17:52:44 +0530
Subject: [PATCH] 1. Fixed import inside tests 2. yapf

---
 scripts/india_nhm/base/data_cleaner.py        |  8 ++--
 scripts/india_nhm/base/readme_generator.py    |  1 +
 .../nhm_maternal_health/preprocess.py         | 24 ++++++------
 .../nhm_maternal_health/preprocess_test.py    | 38 +++++++++----------
 4 files changed, 36 insertions(+), 35 deletions(-)

diff --git a/scripts/india_nhm/base/data_cleaner.py b/scripts/india_nhm/base/data_cleaner.py
index c7cc26a..a1e42db 100644
--- a/scripts/india_nhm/base/data_cleaner.py
+++ b/scripts/india_nhm/base/data_cleaner.py
@@ -112,6 +112,7 @@ class NHMDataLoaderBase(object):
         cols_dict: dictionary containing column names in the data files mapped to StatVars
                     (keys contain column names and values contains StatVar names)
     """
+
     def __init__(self, data_folder, dataset_name, cols_dict, final_csv_path):
         """
         Constructor
@@ -148,14 +149,13 @@ class NHMDataLoaderBase(object):
 
             if fext == '.xls':
                 # Reading .xls file as html and preprocessing multiindex
-                self.raw_df = pd.read_html(os.path.join(
-                    self.data_folder, file))[0]
+                self.raw_df = pd.read_html(os.path.join(self.data_folder,
+                                                        file))[0]
                 self.raw_df.columns = self.raw_df.columns.droplevel()
 
                 cleaned_df = pd.DataFrame()
                 cleaned_df['State'] = self.raw_df['Indicators']['Indicators.1']
-                cleaned_df['isoCode'] = cleaned_df['State'].map(
-                    INDIA_ISO_CODES)
+                cleaned_df['isoCode'] = cleaned_df['State'].map(INDIA_ISO_CODES)
                 cleaned_df['Date'] = date
 
                 # If no columns specified, extract all except first two (index and state name)
diff --git a/scripts/india_nhm/base/readme_generator.py b/scripts/india_nhm/base/readme_generator.py
index 4e592be..0d266cd 100644
--- a/scripts/india_nhm/base/readme_generator.py
+++ b/scripts/india_nhm/base/readme_generator.py
@@ -16,6 +16,7 @@
 class ReadMeGen():
     """
     """
+
     def __init__(self, dataset_name, dataset_description, data_level,
                  cols_dict):
         self.dataset_name = dataset_name
diff --git a/scripts/india_nhm/nhm_maternal_health/preprocess.py b/scripts/india_nhm/nhm_maternal_health/preprocess.py
index 92cee22..32e1310 100644
--- a/scripts/india_nhm/nhm_maternal_health/preprocess.py
+++ b/scripts/india_nhm/nhm_maternal_health/preprocess.py
@@ -21,29 +21,29 @@ from base.readme_generator import ReadMeGen
 # Mapping dictionary for data columns and StatVars
 cols_to_nodes = {
     'State':
-    'State',
+        'State',
     'isoCode':
-    'isoCode',
+        'isoCode',
     'Date':
-    'Date',
+        'Date',
     'Estimated Number of Annual Pregnancies #':
-    'Count_PregnancyEvent',
+        'Count_PregnancyEvent',
     'Total number of pregnant women Registered for ANC':
-    'Count_PregnantWomen_RegisteredForAntenatalCare',
+        'Count_PregnantWomen_RegisteredForAntenatalCare',
     'Number of Pregnant women registered within first trimester':
-    'Count_PregnantWomen_RegisteredForAntenatalCareWithinFirstTrimester',
+        'Count_PregnantWomen_RegisteredForAntenatalCareWithinFirstTrimester',
     'Total reported deliveries':
-    'Count_ChildDeliveryEvent',
+        'Count_ChildDeliveryEvent',
     'Institutional deliveries (Public Insts.+Pvt. Insts.)':
-    'Count_ChildDeliveryEvent_InAnInstitution',
+        'Count_ChildDeliveryEvent_InAnInstitution',
     'Deliveries Conducted at Public Institutions':
-    'Count_ChildDeliveryEvent_InPublicInstitution',
+        'Count_ChildDeliveryEvent_InPublicInstitution',
     'Number of Home deliveries':
-    'Count_ChildDeliveryEvent_AtHome',
+        'Count_ChildDeliveryEvent_AtHome',
     'Number of home deliveries attended by SBA trained (Doctor/Nurse/ANM)':
-    'Count_ChildDeliveryEvent_AtHome_WithStandByAssist',
+        'Count_ChildDeliveryEvent_AtHome_WithStandByAssist',
     '% Safe deliveries to Total Reported Deliveries':
-    'Count_DeliveryEvent_Safe_AsFractionOf_Count_DeliveryEvent'
+        'Count_DeliveryEvent_Safe_AsFractionOf_Count_DeliveryEvent'
 }
 
 if __name__ == '__main__':
diff --git a/scripts/india_nhm/nhm_maternal_health/preprocess_test.py b/scripts/india_nhm/nhm_maternal_health/preprocess_test.py
index 290a093..6ba12f1 100644
--- a/scripts/india_nhm/nhm_maternal_health/preprocess_test.py
+++ b/scripts/india_nhm/nhm_maternal_health/preprocess_test.py
@@ -17,35 +17,35 @@ sys.path.append("..")
 
 import os
 import unittest
-from base.data_cleaner import NHMDataLoaderBase
+from india_nhm.base.data_cleaner import NHMDataLoaderBase
 
 # module_dir_ is the path to where this test is running from.
 module_dir_ = os.path.dirname(__file__)
 cols_to_nodes = {
     'State':
-    'State',
+        'State',
     'isoCode':
-    'isoCode',
+        'isoCode',
     'Date':
-    'Date',
+        'Date',
     'Estimated Number of Annual Pregnancies #':
-    'Count_PregnancyEvent',
+        'Count_PregnancyEvent',
     'Total number of pregnant women Registered for ANC':
-    'Count_PregnantWomen_RegisteredForAntenatalCare',
+        'Count_PregnantWomen_RegisteredForAntenatalCare',
     'Number of Pregnant women registered within first trimester':
-    'Count_PregnantWomen_RegisteredForAntenatalCareWithinFirstTrimester',
+        'Count_PregnantWomen_RegisteredForAntenatalCareWithinFirstTrimester',
     'Total reported deliveries':
-    'Count_ChildDeliveryEvent',
+        'Count_ChildDeliveryEvent',
     'Institutional deliveries (Public Insts.+Pvt. Insts.)':
-    'Count_ChildDeliveryEvent_InAnInstitution',
+        'Count_ChildDeliveryEvent_InAnInstitution',
     'Deliveries Conducted at Public Institutions':
-    'Count_ChildDeliveryEvent_InPublicInstitution',
+        'Count_ChildDeliveryEvent_InPublicInstitution',
     'Number of Home deliveries':
-    'Count_ChildDeliveryEvent_AtHome',
+        'Count_ChildDeliveryEvent_AtHome',
     'Number of home deliveries attended by SBA trained (Doctor/Nurse/ANM)':
-    'Count_ChildDeliveryEvent_AtHome_WithStandByAssist',
+        'Count_ChildDeliveryEvent_AtHome_WithStandByAssist',
     '% Safe deliveries to Total Reported Deliveries':
-    'Count_DeliveryEvent_Safe_AsFractionOf_Count_DeliveryEvent'
+        'Count_DeliveryEvent_Safe_AsFractionOf_Count_DeliveryEvent'
 }
 
 
@@ -53,16 +53,16 @@ class TestPreprocess(unittest.TestCase):
 
     maxDiff = None
 
-    def test_create_csv(self):        
+    def test_create_csv(self):
         expected_file = open(os.path.join(module_dir_, 'test/expected.csv'))
         expected_data = expected_file.read()
         expected_file.close()
 
-        loader = NHMDataLoaderBase(data_folder=os.path.join(module_dir_, 'test/'),
-                                   dataset_name='test_gen',
-                                   cols_dict=cols_to_nodes,
-                                   final_csv_path=os.path.join(module_dir_, "test/test_gen.csv")
-                                   )
+        loader = NHMDataLoaderBase(
+            data_folder=os.path.join(module_dir_, 'test/'),
+            dataset_name='test_gen',
+            cols_dict=cols_to_nodes,
+            final_csv_path=os.path.join(module_dir_, "test/test_gen.csv"))
         loader.generate_csv()
 
         result_file = open(os.path.join(module_dir_, 'test/test_gen.csv'))
-- 
2.17.1

